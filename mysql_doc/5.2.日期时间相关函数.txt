与日期时间相关的函数：
ADDDATE(date, INTERVAL expr unit), ADDDATE(expr, days)：如使用“INTERVAL”形式的函数时“ADDDATE()”函数是“DATE_ADD()”的同义词，其中“unit”可以是“SECOND”、“MINUTE”、“HOUR”、“DAY”、“MONTH”和“YEAR”。
mysql> SELECT ADDDATE("2019-02-28", INTERVAL 5 DAY);
+---------------------------------------+
| ADDDATE("2019-02-28", INTERVAL 5 DAY) |
+---------------------------------------+
| 2019-03-05                            |
+---------------------------------------+
mysql> SELECT ADDDATE("2019-02-28", INTERVAL 5 MONTH);
+-----------------------------------------+
| ADDDATE("2019-02-28", INTERVAL 5 MONTH) |
+-----------------------------------------+
| 2019-07-28                              |
+-----------------------------------------+
mysql> SELECT ADDDATE("2019-02-28", INTERVAL 5 YEAR);
+----------------------------------------+
| ADDDATE("2019-02-28", INTERVAL 5 YEAR) |
+----------------------------------------+
| 2024-02-28                             |
+----------------------------------------+
mysql> SELECT ADDDATE("2019-02-28", INTERVAL 5 HOUR);
+----------------------------------------+
| ADDDATE("2019-02-28", INTERVAL 5 HOUR) |
+----------------------------------------+
| 2019-02-28 05:00:00                    |
+----------------------------------------+

ADDTIME(expr1, expr2)：将两个时间表达式进行相加。
mysql> SELECT ADDTIME("2019-03-05 15:34:15","14:20;15");
+-------------------------------------------+
| ADDTIME("2019-03-05 15:34:15","14:20;15") |
+-------------------------------------------+
| 2019-03-06 05:54:15                       |
+-------------------------------------------+

CONVERT_TZ(dt, from_tz, to_tz)：将日期时间值“dt”从“from_tz”时区转换为“to_tz”时区的时间。
mysql> SELECT CONVERT_TZ("2019-07-29 20:15:00","+08:00","+00:00");
+-----------------------------------------------------+
| CONVERT_TZ("2019-07-29 20:15:00","+08:00","+00:00") |
+-----------------------------------------------------+
| 2019-07-29 12:15:00                                 |
+-----------------------------------------------------+
mysql> SELECT CONVERT_TZ("2019-07-29 20:15:00","+08:00","+9:00");
+----------------------------------------------------+
| CONVERT_TZ("2019-07-29 20:15:00","+08:00","+9:00") |
+----------------------------------------------------+
| 2019-07-29 21:15:00                                |
+----------------------------------------------------+

CURDATE()：以“YYYY-MM-DD”或“YYYYMMDD”的格式返回当前日期。
mysql> SELECT CURDATE();
+------------+
| CURDATE()  |
+------------+
| 2019-07-29 |
+------------+
mysql> SELECT CURDATE()+0;
+-------------+
| CURDATE()+0 |
+-------------+
|    20190729 |
+-------------+

    CURRENT_DATE([fsp]), CURRENT_DATE：等同于“CURDATE()”函数。

CURTIME([fsp])：以“hh:mm:ss”或“hhmmss”格式显示当前时间，。
mysql> SELECT CURTIME();
+-----------+
| CURTIME() |
+-----------+
| 22:11:30  |
+-----------+
mysql> SELECT CURTIME(4);
+---------------+
| CURTIME(4)    |
+---------------+
| 22:11:34.3810 |
+---------------+
mysql> SELECT CURTIME(4)+0;
+--------------+
| CURTIME(4)+0 |
+--------------+
| 221327.0314  |
+--------------+

    CURRENT_TIME(), CURRENT_TIME：等同于“CURTIME()”函数。

DATE(expr)：对“expr”部分提取日期。
mysql> SELECT DATE("2019-05-24 15:48:12");
+-----------------------------+
| DATE("2019-05-24 15:48:12") |
+-----------------------------+
| 2019-05-24                  |
+-----------------------------+

DATEDIFF(expr1, expr2)：计算“expr2”到“expr1”的天数，“expr1”和“expr2”是日期或日期时间表达式，但在计算中仅使用值的日期部分。
mysql> SELECT DATEDIFF("2019-07-29 23:59:59","2019-07-28 00:00:00");
+-------------------------------------------------------+
| DATEDIFF("2019-07-29 23:59;59","2019-07-28 00:00:00") |
+-------------------------------------------------------+
|                                                     1 |
+-------------------------------------------------------+
mysql> SELECT DATEDIFF("2019-07-28 00:00:00","2019-07-29 23:59:59");
+-------------------------------------------------------+
| DATEDIFF("2019-07-28 00:00:00","2019-07-29 23:59:59") |
+-------------------------------------------------------+
|                                                    -1 |
+-------------------------------------------------------+

DATE_ADD(date, INTERVAL expr unit)：增加指定单位时间（如下所示）。
mysql> SELECT NOW(),DATE_ADD(NOW(),INTERVAL 4 DAY);
+---------------------+--------------------------------+
| NOW()               | DATE_ADD(NOW(),INTERVAL 4 DAY) |
+---------------------+--------------------------------+
| 2019-07-25 22:28:00 | 2019-07-29 22:28:00            |
+---------------------+--------------------------------+
mysql> SELECT CURRENT_TIME(),DATE_ADD(CURRENT_TIME(), INTERVAL 30 MINUTE);
+----------------+----------------------------------------------+
| CURRENT_TIME() | DATE_ADD(CURRENT_TIME(), INTERVAL 30 MINUTE) |
+----------------+----------------------------------------------+
| 22:27:32       | 22:57:32                                     |
+----------------+----------------------------------------------+
mysql> SELECT CURDATE();
+------------+
| CURDATE()  |
+------------+
| 2019-07-29 |
+------------+
mysql> SELECT DATE_ADD(CURDATE(), INTERVAL 5 DAY);
+-------------------------------------+
| DATE_ADD(CURDATE(), INTERVAL 5 DAY) |
+-------------------------------------+
| 2019-08-03                          |
+-------------------------------------+
mysql> SELECT DATE_ADD(CURDATE(), INTERVAL -5 DAY);
+--------------------------------------+
| DATE_ADD(CURDATE(), INTERVAL -5 DAY) |
+--------------------------------------+
| 2019-07-24                           |
+--------------------------------------+

DATE_FORMAT(date,format)：以指定格式显示日期，以下的格式字符串也适用于“STR_TO_DATE()”、“TIME_FORMAT()”和“UNIX_TIMESTAMP”函数。
+-----------+--------------------------------------------------------------------------------------------------+
| Specifier | Description                                                                                      |
+-----------+--------------------------------------------------------------------------------------------------+
| %a        | Sun, Mon, ..., Sat                                                                               |
| %b        | Jan, Feb, ..., Dec                                                                               |
| %W        | Weekday name (Sunday..Saturday)                                                                  |
| %w        | Day of the week (0=Sunday..6=Saturday)                                                           |
| %Y        | Year, numeric, four digits                                                                       |
| %y        | Year, numeric (two digits)                                                                       |
| %c        | Month, numeric (0..12)                                                                           |
| %m        | Month, numeric (00..12)                                                                          |
| %M        | Month name (January..December)                                                                   |
| %D        | Day of the month with English suffix (0th, 1st, 2nd, 3rd, …)                                     |
| %d        | Day of the month, numeric (00..31)                                                               |
| %e        | Day of the month, numeric (0..31)                                                                |
| %r        | Time, 12-hour (hh:mm:ss followed by AM or PM)                                                    |
| %T        | Time, 24-hour (hh:mm:ss)                                                                         |
| %H        | Hour (00..23)                                                                                    |
| %k        | Hour (0..23)                                                                                     |
| %h, %I    | Hour (01..12)                                                                                    |
| %l        | Hour (1..12)                                                                                     |
| %i        | Minutes, numeric (00..59)                                                                        |
| %S, %s    | Seconds (00..59)                                                                                 |
| %f        | Microseconds (000000..999999)                                                                    |
| %p        | AM or PM                                                                                         |
| %U        | Week (00..53), where Sunday is the first day of the week; WEEK() mode 0                          |
| %U        | Week (00..53), where Monday is the first day of the week; WEEK() mode 1                          |
| %V        | Week (01..53), where Sunday is the first day of the week; WEEK() mode 2; used with %X            |
| %v        | Week (01..53), where Monday is the first day of the week; WEEK() mode 3; used with %x            |
| %j        | Day of year (001..366)                                                                           |
| %X        | Year for the week where Sunday is the first day of the week, numeric, four digits; used with %V  |
| %x        | Year for the week, where Monday is the first day of the week, numeric, four digits; used with %v |
| %%        | A literal % character                                                                            |
| %x        | x, for any “x” not listed above                                                                  |
+-----------+--------------------------------------------------------------------------------------------------+

mysql> SELECT DATE_FORMAT(SYSDATE(), '%h:%i:%S %p');
+---------------------------------------+
| DATE_FORMAT(SYSDATE(), '%h:%i:%S %p') |
+---------------------------------------+
| 10:34:35 AM                           |
+---------------------------------------+

DATE_SUB(date, INTERVAL expr unit)：减少指定单位的时间（参照函数“DATE_ADD()”的语法）。
mysql> SELECT DATE_SUB('2019-05-04',INTERVAL 4 DAY);
+---------------------------------------+
| DATE_SUB('2019-05-04',INTERVAL 4 DAY) |
+---------------------------------------+
| 2019-04-30                            |
+---------------------------------------+

DAYNAME(date)：显示星期几（英文全称），用于名称的语言由“lc_time_names”变量的值控制。
mysql> SELECT @@lc_time_names;
+-----------------+
| @@lc_time_names |
+-----------------+
| en_US           |
+-----------------+
mysql> SELECT DAYNAME(SYSDATE());
+--------------------+
| DAYNAME(SYSDATE()) |
+--------------------+
| Tuesday            |
+--------------------+

DAYOFMONTH()：返回月份的日期部分，范围从1～31，但对于“2008-00-00”也有零日的部分。
mysql> SELECT DAYOFMONTH(SYSDATE());          
+-----------------------+
| DAYOFMONTH(SYSDATE()) |
+-----------------------+
|                    30 |
+-----------------------+
mysql> SELECT DAYOFMONTH('2008-00-00');
+--------------------------+
| DAYOFMONTH('2008-00-00') |
+--------------------------+
|                        0 |
+--------------------------+

    DAY()：等同于函数“DAYOFMONTF()”的语法。

DAYOFWEEK(date)：返回指定日期是这一周的第几天，周日对应1，周一对应2，依依类推。
mysql> SELECT DAYOFWEEK(SYSDATE());
+----------------------+
| DAYOFWEEK(SYSDATE()) |
+----------------------+
|                    3 |
+----------------------+

DAYOFYEAR()：返回指定日期是这一年的第几天，范围是“1～366”。
mysql> SELECT DAYOFYEAR(SYSDATE());       
+----------------------+
| DAYOFYEAR(SYSDATE()) |
+----------------------+
|                  211 |
+----------------------+

EXTRACT(unit FROM date)：从日期中提取部分，“unit”可参照函数“DATE_ADD()”。
    mysql> SELECT EXTRACT(YEAR FROM SYSDATE());          
        +------------------------------+
        | EXTRACT(YEAR FROM SYSDATE()) |
        +------------------------------+
        |                         2019 |
        +------------------------------+
    mysql> SELECT EXTRACT(YEAR_MONTH FROM SYSDATE());
        +------------------------------------+
        | EXTRACT(YEAR_MONTH FROM SYSDATE()) |
        +------------------------------------+
        |                             201907 |
        +------------------------------------+
    mysql> SELECT EXTRACT(MICROSECOND FROM CURTIME(6));
        +--------------------------------------+
        | EXTRACT(MICROSECOND FROM CURTIME(6)) |
        +--------------------------------------+
        |                               308256 |
        +--------------------------------------+

FROM_DAYS(N)：给定天数“N”返回DATE值（起始日期为“0000-00-00”）。
    mysql> select from_days(0);
        +--------------+
        | from_days(0) |
        +--------------+
        | 0000-00-00   |
        +--------------+
    mysql> select from_days(730670);
        +-------------------+
        | from_days(730670) |
        +-------------------+
        | 2000-07-04        |
        +-------------------+

FROM_UNIXTIME(unix_timestamp[,format])：“unix_timestamp”意为从“1970-01-01 00:00:00”所经过的秒数，以“YYYY-MM-DD hh:mm:ss”或YYYYMMDDhhmmss.uuuuuu格式显示取决于上下文是字符串还是数字，默认会加上时区信息。
    mysql> SELECT FROM_UNIXTIME('15');
        +----------------------------+
        | FROM_UNIXTIME('15')        |
        +----------------------------+
        | 1970-01-01 08:00:15.000000 |
        +----------------------------+
    mysql> SELECT FROM_UNIXTIME('15') + 0;
        +-------------------------+
        | FROM_UNIXTIME('15') + 0 |
        +-------------------------+
        |   19700101080015.000000 |
        +-------------------------+
    mysql> SELECT FROM_UNIXTIME('15','%a');
        +--------------------------+
        | FROM_UNIXTIME('15','%a') |
        +--------------------------+
        | Thu                      |
        +--------------------------+

GET_FORMAT({DATE|TIME|DATETIME},{'EUR'|'USA'|'JIS'|'ISO'|'INTERNAL'})：返回格式字符串。此函数与“DATE_FORMAT()”和“STR_TO_DATE()”函数结合使用非常有用，此处的“ISO”指的是“ISO 9075”。
    +----------------------------------+---------------------+
    |         Function Call            |       Result        |
    +----------------------------------+---------------------+
    | GET_FORMAT(DATE, 'USA')          | '%m.%d.%Y'          |
    | GET_FORMAT(DATE, 'JIS')          | '%Y-%m-%d'          |
    | GET_FORMAT(DATE, 'ISO')          | '%Y-%m-%d'          |
    | GET_FORMAT(DATE, 'EUR')          | '%d.%m.%Y'          |
    | GET_FORMAT(DATE, 'INTERNAL')     | '%Y%m%d'            |
    | GET_FORMAT(DATETIME, 'USA')      | '%Y-%m-%d %H.%i.%s' |
    | GET_FORMAT(DATETIME, 'JIS')      | '%Y-%m-%d %H:%i:%s' |
    | GET_FORMAT(DATETIME, 'ISO')      | '%Y-%m-%d %H:%i:%s' |
    | GET_FORMAT(DATETIME, 'EUR')      | '%Y-%m-%d %H.%i.%s' |
    | GET_FORMAT(DATETIME, 'INTERNAL') | '%Y%m%d%H%i%s'      |
    | GET_FORMAT(TIME, 'USA')          | '%h:%i:%s %p'       |
    | GET_FORMAT(TIME, 'JIS')          | '%H:%i:%s'          |
    | GET_FORMAT(TIME, 'ISO')          | '%H:%i:%s'          |
    | GET_FORMAT(TIME, 'EUR')          | '%H.%i.%s'          |
    | GET_FORMAT(TIME, 'INTERNAL')     | '%H%i%s'            |
    +----------------------------------+---------------------+
    mysql> SELECT DATE_FORMAT(SYSDATE(),GET_FORMAT(DATE,'USA'));
        +-----------------------------------------------+
        | DATE_FORMAT(SYSDATE(),GET_FORMAT(DATE,'USA')) |
        +-----------------------------------------------+
        | 07.30.2019                                    |
        +-----------------------------------------------+
    mysql> SELECT STR_TO_DATE('07.30.2019',GET_FORMAT(DATE,"USA"));
        +--------------------------------------------------+
        | STR_TO_DATE('07.30.2019',GET_FORMAT(DATE,"USA")) |
        +--------------------------------------------------+
        | 2019-07-30                                       |
        +--------------------------------------------------+

HOUR(time)：返回时间小时。对于时间值，返回值的范围是“0～23”。但是，TIME值的范围实际上要大得多，因此HOUR可以返回大于23的值。
    mysql> SELECT HOUR(CURTIME());
        +-----------------+
        | HOUR(CURTIME()) |
        +-----------------+
        |              12 |
        +-----------------+
    mysql> SELECT HOUR("272:40:15");
        +-------------------+
        | HOUR("272:40:15") |
        +-------------------+
        |               272 |
        +-------------------+

LAST_DAY(date)：给定日期，获取该月份的最后一天。
    mysql> SELECT LAST_DAY(CURDATE());
        +---------------------+
        | LAST_DAY(CURDATE()) |
        +---------------------+
        | 2019-07-31          |
        +---------------------+
    mysql> SELECT LAST_DAY('2001-02-01');
        +------------------------+
        | LAST_DAY('2001-02-01') |
        +------------------------+
        | 2001-02-28             |
        +------------------------+
    mysql> SELECT LAST_DAY('2000-02-01'); 
        +------------------------+
        | LAST_DAY('2000-02-01') |
        +------------------------+
        | 2000-02-29             |
        +------------------------+
    mysql> SELECT LAST_DAY('2000-02-30');
        +------------------------+
        | LAST_DAY('2000-02-30') |
        +------------------------+
        | NULL                   |
        +------------------------+

MAKEDATE(year,dayofyear)：给定年份和一年中的第几天，返回日期。
    mysql> SELECT MAKEDATE(2019,250);
        +--------------------+
        | MAKEDATE(2019,250) |
        +--------------------+
        | 2019-09-07         |
        +--------------------+

MAKETIME(hour,minute,second)：分别给定时份秒，返回“%h:%m:%s”格式的时间。
    mysql> SELECT MAKETIME(13,15,34);
        +--------------------+
        | MAKETIME(13,15,34) |
        +--------------------+
        | 13:15:34           |
        +--------------------+

MICROSECOND(expr)：提取时间中的微秒部分。
    mysql> SELECT MICROSECOND(NOW(6));
        +---------------------+
        | MICROSECOND(NOW(6)) |
        +---------------------+
        |              352863 |
        +---------------------+

MINUTE(time)：提取时间中的分钟部分。
    mysql> SELECT NOW(),MINUTE(NOW());
        +---------------------+---------------+
        | NOW()               | MINUTE(NOW()) |
        +---------------------+---------------+
        | 2019-07-30 13:50:53 |            50 |
        +---------------------+---------------+

MONTH(date)：提取日期参数中的月份部分。
    mysql> SELECT MONTH(NOW());
        +--------------+
        | MONTH(NOW()) |
        +--------------+
        |            7 |
        +--------------+

MONTHNAME(date)：提取日期参数中的月份部分并显示为朋份名，月份名由“lc_time_names”变量来指定。
    mysql> SELECT MONTHNAME(NOW());     
        +------------------+
        | MONTHNAME(NOW()) |
        +------------------+
        | July             |
        +------------------+
    mysql> select @@lc_time_names;
        +-----------------+
        | @@lc_time_names |
        +-----------------+
        | en_US           |
        +-----------------+

NOW(fsp)：返回SQL执行时的时间并以“YYYY-MM-DD hh:mm:ss”或“YYYYMMDDhhmmss”格式进行显示（显示格式取决于上下文是字符还是数值）。
    mysql> SELECT NOW(),SLEEP(5),NOW();
        +---------------------+----------+---------------------+
        | NOW()               | SLEEP(5) | NOW()               |
        +---------------------+----------+---------------------+
        | 2019-07-29 21:23:52 |        0 | 2019-07-29 21:23:52 |
        +---------------------+----------+---------------------+
    mysql> SELECT NOW() + 0;
        +----------------+
        | NOW() + 0      |
        +----------------+
        | 20190730135607 |
        +----------------+

    CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP：等同于“NOW()”函数，获取当前SQL执行的时间。
    LOCALTIME([fsp]), LOCALTIME：等同于“NOW()”函数，获取当前SQL执行的时间。
    LOCALTIMESTAMP, LOCALTIMESTAMP()：等同于“NOW()”函数，获取当前SQL执行的时间。

PERIOD_ADD(P, N)：将“N”个月加到“P（P的格式应为YYMM或YYYYMM）”之上，并返回年月的值。
    mysql> SELECT PERIOD_ADD(1912,3);
        +--------------------+
        | PERIOD_ADD(1912,3) |
        +--------------------+
        |             202003 |
        +--------------------+

PERIOD_DIFF(P1, P2)：返回“P1-P2”的月份的值，“P1”或“P2”的格式应为“YYMM”或“YYYYMM”。
    mysql> SELECT PERIOD_DIFF(201912,201907);
        +----------------------------+
        | PERIOD_DIFF(201912,201907) |
        +----------------------------+
        |                          5 |
        +----------------------------+
    mysql> SELECT PERIOD_DIFF(201912,202001);
        +----------------------------+
        | PERIOD_DIFF(201912,202001) |
        +----------------------------+
        |                         -1 |
        +----------------------------+

QUARTER(date)：返回指定日期是一年中的四分之几。
    mysql> SELECT NOW(),QUARTER(NOW());
        +---------------------+----------------+
        | NOW()               | QUARTER(NOW()) |
        +---------------------+----------------+
        | 2019-07-30 14:03:06 |              3 |
        +---------------------+----------------+

SEC_TO_TIME(seconds)：给定秒数转换成小时、分钟和秒钟，显示格式有“hh:mm:ss”和“hhmmss”两种。
    mysql> SELECT SEC_TO_TIME(86400);
        +--------------------+
        | SEC_TO_TIME(86400) |
        +--------------------+
        | 24:00:00           |
        +--------------------+
    mysql> SELECT SEC_TO_TIME(80000)+0;
        +----------------------+
        | SEC_TO_TIME(80000)+0 |
        +----------------------+
        |               221320 |
        +----------------------+

SECOND(time)：返回给定的时间中的秒钟部分。
    mysql> SELECT CURTIME(),SECOND(CURTIME());           
        +-----------+-------------------+
        | CURTIME() | SECOND(CURTIME()) |
        +-----------+-------------------+
        | 14:05:41  |                41 |
        +-----------+-------------------+

STR_TO_DATE(str, format)：这是“DATE_FORMAT()”函数的反转，它采用字符串str和格式化字符串格式。如果格式字符串包含日期和时间部分，则使用“STR_TO_DATE()”返回“DATETIME”值；如果字符串仅包含日期或时间部分，则返回“DATE”或“TIME”值。如果从str中提取的日期，时间或日期时间值是非法的，“STR_TO_DATE()”将返回NULL并生成警告。
    mysql> SELECT STR_TO_DATE('01,5,2017','%d,%m,%Y');
        +-------------------------------------+
        | STR_TO_DATE('01,5,2017','%d,%m,%Y') |
        +-------------------------------------+
        | 2017-05-01                          |
        +-------------------------------------+

SUBDATE(date,INTERVAL expr unit), SUBDATE(expr,days)：如使用“INTERVAL”的形式时，“SUBDATE()”函数等同于“DATE_SUB()”函数，其计算方法是“date - expr”。
    mysql> SELECT SUBDATE(NOW(), INTERVAL 86400 SECOND);
        +---------------------------------------+
        | SUBDATE(NOW(), INTERVAL 86400 SECOND) |
        +---------------------------------------+
        | 2019-07-29 14:17:16                   |
        +---------------------------------------+

SUBTIME(expr1,expr2)：返回“expr1 - expr2”的值，其返回值的格式与“expr1”相同。
    mysql> SELECT NOW(),SUBTIME(NOW(),'1 1:1:1');
        +---------------------+--------------------------+
        | NOW()               | SUBTIME(NOW(),'1 1:1:1') |
        +---------------------+--------------------------+
        | 2019-07-30 14:23:02 | 2019-07-29 13:22:01      |
        +---------------------+--------------------------+

SYSDATE()：返回执行函数时的时间，如果在启动时指定“--sysdate-is-now”参数则会导致“SYSDATE()”函数与“NOW()”函数的值相同。
    注意：“NOW()”与“SYSDATE()”的区别在于“NOW()”是显示执行SQL时的时间，而“SYSDATE()”是显示执行函数时的时间（如下所示）。

    mysql> SELECT NOW(),SYSDATE(),SLEEP(5),NOW(),SYSDATE();
        +---------------------+---------------------+----------+---------------------+---------------------+
        | NOW()               | SYSDATE()           | SLEEP(5) | NOW()               | SYSDATE()           |
        +---------------------+---------------------+----------+---------------------+---------------------+
        | 2019-07-25 22:15:03 | 2019-07-25 22:15:03 |        0 | 2019-07-25 22:15:03 | 2019-07-25 22:15:08 |
        +---------------------+---------------------+----------+---------------------+---------------------+
    mysql> SELECT NOW(6),SYSDATE(6);
        +----------------------------+----------------------------+
        | NOW(6)                     | SYSDATE(6)                 |
        +----------------------------+----------------------------+
        | 2019-07-25 22:22:28.824731 | 2019-07-25 22:22:28.824832 |
        +----------------------------+----------------------------+
        通过在上面SQL的函数中指定显示毫秒的方式可看出NOW()函数执行时间靠前，SYSDATE()函数执行时间靠后。

TIME(expr)：提取指定时间的时间部分。
    mysql> SELECT NOW(),TIME(NOW());
        +---------------------+-------------+
        | NOW()               | TIME(NOW()) |
        +---------------------+-------------+
        | 2019-07-30 14:26:17 | 14:26:17    |
        +---------------------+-------------+

TIME_FORMAT(time, format)：这与“DATE_FORMAT()”函数类似，但格式字符串可能只包含小时，分钟，秒和微秒的格式说明符。
    mysql> SELECT TIME_FORMAT('15:25:30', '%r');
        +-------------------------------+
        | TIME_FORMAT('15:25:30', '%r') |
        +-------------------------------+
        | 03:25:30 PM                   |
        +-------------------------------+

TIME_TO_SEC(time)：将时间参数转换为秒数。
    mysql> SELECT TIME_TO_SEC('15:25:30');
        +-------------------------+
        | TIME_TO_SEC('15:25:30') |
        +-------------------------+
        |                   55530 |
        +-------------------------+
    mysql> SELECT TIME_TO_SEC('24:00:00');
        +-------------------------+
        | TIME_TO_SEC('24:00:00') |
        +-------------------------+
        |                   86400 |
        +-------------------------+

TIMEDIFF(expr1,expr2)：返回“expr1 - expr2”的“hh:mm:ss”，但“expr1”和“expr2”是时间或日期时间表达式，并且两者必须属于同一类型。
    mysql> SELECT NOW(),TIMEDIFF(NOW(),'2017-09-15 15:30:40');
        +---------------------+---------------------------------------+
        | NOW()               | TIMEDIFF(NOW(),'2017-09-15 15:30:40') |
        +---------------------+---------------------------------------+
        | 2019-07-30 14:29:56 | 838:59:59                             |
        +---------------------+---------------------------------------+

TIMESTAMP(expr), TIMESTAMP(expr1,expr2)：使用单个参数则会把日期时间表达式“expr”返回为“YYYY-MM-DD hh:mm:ss”的格式，如提供两个参数，则会返回“expr1 + expr2”的值，其结果也返回为日期时间的格式。
    mysql> SELECT TIMESTAMP("2019-04-25");
        +-------------------------+
        | TIMESTAMP("2019-04-25") |
        +-------------------------+
        | 2019-04-25 00:00:00     |
        +-------------------------+
    mysql> SELECT TIMESTAMP("2019-04-25","25:20:14"); 
        +------------------------------------+
        | TIMESTAMP("2019-04-25","25:20:14") |
        +------------------------------------+
        | 2019-04-26 01:20:14                |
        +------------------------------------+

TIMESTAMPADD(unit,interval,datetime_expr)：将整数表达式时间间隔添加到日期或日期时间表达式“datetime_expr”，间隔的单位由“unit”给出，可使用的单位有“MICROSECOND”、“SECOND”、“MINUTE”、“HOUR”、“DAY”、“WEEK”、“MONTH”、“QUARTER”或“YEAR”。
    mysql> SELECT NOW(),TIMESTAMPADD(DAY, 5 , NOW());
        +---------------------+------------------------------+
        | NOW()               | TIMESTAMPADD(DAY, 5 , NOW()) |
        +---------------------+------------------------------+
        | 2019-07-30 14:50:05 | 2019-08-04 14:50:05          |
        +---------------------+------------------------------+

TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2)：返回“datetime_expr2 - datetime_expr1”的值，其中“datetime_expr1”和“datetime_expr2”必须是日期或日期时间表达式。返回的结果的单位由“unit”给出，“unit”可参照“TIMESTAMPADD()”中的“unit”。
    mysql> SELECT TIMESTAMPDIFF(DAY,'2019-3-15','2019-7-29');
        +--------------------------------------------+
        | TIMESTAMPDIFF(DAY,'2019-3-15','2019-7-29') |
        +--------------------------------------------+
        |                                        136 |
        +--------------------------------------------+

TO_DAYS(date)：给定日期返回从“0000-00-00”所经过的天数。
    mysql> SELECT TO_DAYS('0000-01-01');
        +-----------------------+
        | TO_DAYS('0000-01-01') |
        +-----------------------+
        |                     1 |
        +-----------------------+
    mysql> SELECT TO_DAYS("2019-07-29");
        +-----------------------+
        | TO_DAYS("2019-07-29") |
        +-----------------------+
        |                737634 |
        +-----------------------+

TO_SECONDS(expr)：给定日期或日期时间参数，返回自“0000-00-00 00:00:00”所经过的秒数。
    mysql> SELECT TO_SECONDS('0000-01-01 00:00:00');
        +-----------------------------------+
        | TO_SECONDS('0000-01-01 00:00:00') |
        +-----------------------------------+
        |                             86400 |
        +-----------------------------------+

UNIX_TIMESTAMP([date])：如果调用“UNIX_TIMESTAMP()”时没有“date”参数，则返回一个Unix时间戳，表示自'1970-01-01 00:00:00'UTC以来的秒数。
    mysql> SELECT UNIX_TIMESTAMP("2019-07-10");
        +------------------------------+
        | UNIX_TIMESTAMP("2019-07-10") |
        +------------------------------+
        |                   1562688000 |
        +------------------------------+

UTC_DATE，UTC_DATE()：返回当前日期的UTC时间戳，返回的结果以“YYYY-MM-DD”或“YYYYMMDD”的格式进行显示。
    mysql> SELECT UTC_DATE(),UTC_DATE() + 0;
        +------------+----------------+
        | UTC_DATE() | UTC_DATE() + 0 |
        +------------+----------------+
        | 2019-07-30 |       20190730 |
        +------------+----------------+

UTC_TIME，UTC_TIME([fsp])：返回当前UTC时间的时间戳。
    mysql> SELECT UTC_TIME(6),UTC_TIME(6)+0;
        +-----------------+---------------+
        | UTC_TIME(6)     | UTC_TIME(6)+0 |
        +-----------------+---------------+
        | 07:18:44.735150 |  71844.735150 |
        +-----------------+---------------+

UTC_TIMESTAMP，UTC_TIMESTAMP([fsp])：显示UTC时间的时间戳。
    mysql> SELECT UTC_TIMESTAMP(6),UTC_TIMESTAMP(6)+0;
        +----------------------------+-----------------------+
        | UTC_TIMESTAMP(6)           | UTC_TIMESTAMP(6)+0    |
        +----------------------------+-----------------------+
        | 2019-07-30 07:27:10.723131 | 20190730072710.723131 |
        +----------------------------+-----------------------+

WEEK(date[,mode])：用于返回指定日期属于该年度的第几周，“mode”用于定义周日或周一为每周的第一天，以及定义返回值是否应该在“0～53”或“1～53”的范围内，如果省略“mode”参数，则返回值将使用“default_week_format”系统变量。
    +------+-------------------+--------+-------------------------------+
    | Mode | First day of week | Range  | Week 1 is the first week ...  |
    +------+-------------------+--------+-------------------------------+
    | 0    | Sunday            | 0 ~ 53 | with a Sunday in this year    |
    | 1    | Monday            | 0 ~ 53 | with 4 or more days this year |
    | 2    | Sunday            | 1 ~ 53 | with a Sunday in this year    |
    | 3    | Monday            | 1 ~ 53 | with 4 or more days this year |
    | 4    | Sunday            | 0 ~ 53 | with 4 or more days this year |
    | 5    | Monday            | 0 ~ 53 | with a Monday in this year    |
    | 6    | Sunday            | 1 ~ 53 | with 4 or more days this year |
    | 7    | Monday            | 1 ~ 53 | with a Monday in this year    |
    +------+-------------------+--------+-------------------------------+
        注意：
            1、“mode=1”，周一为每周的第一天，“WEEK()”函数返回值的范围是“0～53”，如果第一个周的天数少于4天，则记为第0周，如果大于或等于4则记为第1周。
            2、“mode=2”，周日为每周的第一天，“WEEK()”函数的返回值的范围是“1～53”，如果第一周里包含了周日，则记为第一周，如果第一周里没有周日，则记为上一年度的最后一周。

    mysql> SELECT @@default_week_format;
        +-----------------------+
        | @@default_week_format |
        +-----------------------+
        |                     0 |
        +-----------------------+
    mysql> SELECT WEEK("2019-07-20");
        +--------------------+
        | WEEK("2019-07-20") |
        +--------------------+
        |                 28 |
        +--------------------+
    mysql> SELECT WEEK("2019-07-20",1);
        +----------------------+
        | WEEK("2019-07-20",1) |
        +----------------------+
        |                   29 |
        +----------------------+

WEEKDAY(date)：返回日期的索引（0=Monday，1=Tuesday，... 6=Sunday）。
    mysql> SELECT NOW(),WEEKDAY(NOW());
        +---------------------+----------------+
        | NOW()               | WEEKDAY(NOW()) |
        +---------------------+----------------+
        | 2019-07-30 15:44:59 |              1 |
        +---------------------+----------------+

WEEKOFYEAR(date)：返回日期的日历周，其返回值在“1～53”之间，相当于“WEEK(date, 3)”。
    mysql> SELECT  WEEKOFYEAR("2019-01-01");
        +--------------------------+
        | WEEKOFYEAR("2019-01-01") |
        +--------------------------+
        |                        1 |
        +--------------------------+

YEAR(date)：返回日期的年份，其范围为“1000～9999”。
    mysql> SELECT NOW(),YEAR(NOW());
        +---------------------+-------------+
        | NOW()               | YEAR(NOW()) |
        +---------------------+-------------+
        | 2019-07-30 15:50:22 |        2019 |
        +---------------------+-------------+

YEARWEEK(date), YEARWEEK(date, mode)：返回日期的年份和星期。结果中的年份可能与一年中的第一周和最后一周的日期参数中的年份不同。
    mysql> SELECT YEARWEEK("1987-01-01"),YEARWEEK("1987-12-31");
        +------------------------+------------------------+
        | YEARWEEK("1987-01-01") | YEARWEEK("1987-12-31") |
        +------------------------+------------------------+
        |                 198652 |                 198752 |
        +------------------------+------------------------+