日期类型：
	+-----------+---------+---------------------------------------------------+
	|    TYPE   |  BYTES  |                        RANGE                      |
	+-----------+---------+---------------------------------------------------+
	| DATETIME  |  8      | 1000-01-01 00:00:00 ~ 9999-12-31 23:59:59         |
	| DATE      |  3      | 1000-01-01 ~ 9999-12-31                           |
	| TIMESTAMP |  4      | 1970-01-01 00:00:00 UTC ~ 2038-01-19 03:14:07 UTC |
	| YEAR(2)   |  1      | 1970 ~ 2070                                       |
	| YEAR(4)   |  1      | 1901 ~ 2155                                       |
	| TIME      |  3      | -838:59:59 ~ 838:59:59                            |
	+-----------+---------+---------------------------------------------------+

	1、MySQL 6.5.4版本开始支持微秒。
	2、支持类型： TIME、DATETIME、TIMESTAME
	3、type_name(fsp)，fsp最大为6（见示例1）。
	4、DATETIME与TIMESTAMP最大的区别在于TIMESTAMP有时区而DATETIME没有时区，而实际上可将“TIMESTAME”理解为从“1970-01-01 00:00:00”经过的秒数（见示例2）。
	5、在建表时指定字段在更新数据时自动更新时间戳（见示例3）。

MySQL在日期时间字段下的生日问题：已知某员工的生日，求出该员工下一次的生日日期。
	mysql> SELECT * FROM t12;
		+----+---------------------+
		| id | birthday            |
		+----+---------------------+
		|  1 | 1990-03-15 00:00:00 |
		|  2 | 1992-09-03 00:00:00 |
		+----+---------------------+

示例1：
	mysql> SELECT now();
		+---------------------+
		| now()               |
		+---------------------+
		| 2019-07-25 14:50:08 |
		+---------------------+
	mysql> SELECT now(6);
		+----------------------------+
		| now(6)                     |
		+----------------------------+
		| 2019-07-25 14:53:11.134259 |
		+----------------------------+

示例2：
	mysql> CREATE TABLE t7 (a TIMESTAMP, b DATETIME);
	mysql> INSERT INTO t7 SELECT now(),now();
	mysql> SELECT * FROM t7;
		+---------------------+---------------------+
		| a                   | b                   |
		+---------------------+---------------------+
		| 2019-07-25 14:58:17 | 2019-07-25 14:58:17 |
		+---------------------+---------------------+
	mysql> SELECT @@time_zone;
		+-------------+
		| @@time_zone |
		+-------------+
		| SYSTEM      |
		+-------------+
	mysql> SET time_zone="+00:00";
	mysql> SELECT * FROM t7;
		+---------------------+---------------------+
		| a                   | b                   |
		+---------------------+---------------------+
		| 2019-07-25 06:58:17 | 2019-07-25 14:58:17 |
		+---------------------+---------------------+
		当系统时区修改后，“TIMESTAMP”类型的字段的值也会随即产生变动。

示例3：
	mysql> CREATE TABLE t8 (
	    -> id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	    -> num INT NOT NULL,
	    -> time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	    -> date DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);
	mysql> INSERT INTO t8(num) VALUES (1), (2), (3);
	mysql> SELECT * FROM t8;
		+----+-----+---------------------+---------------------+
		| id | num | time                | date                |
		+----+-----+---------------------+---------------------+
		|  1 |   1 | 2019-07-26 17:59:11 | 2019-07-26 17:59:11 |
		|  2 |   2 | 2019-07-26 17:59:11 | 2019-07-26 17:59:11 |
		|  3 |   3 | 2019-07-26 17:59:11 | 2019-07-26 17:59:11 |
		+----+-----+---------------------+---------------------+
	mysql> UPDATE t8 SET num=num+1 WHERE num >= 2;
	mysql> SELECT * FROM t8;
		+----+-----+---------------------+---------------------+
		| id | num | time                | date                |
		+----+-----+---------------------+---------------------+
		|  1 |   1 | 2019-07-26 17:59:11 | 2019-07-26 17:59:11 |
		|  2 |   3 | 2019-07-26 18:00:17 | 2019-07-26 18:00:17 |
		|  3 |   4 | 2019-07-26 18:00:17 | 2019-07-26 18:00:17 |
		+----+-----+---------------------+---------------------+