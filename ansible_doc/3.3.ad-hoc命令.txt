ad-hoc命令
1、脚本执行
    command：在指定主机上执行以空格间隔的命令参数，由于“command”不会通过“shell”进行处理，所以变量如“$HOME”和“<”、“>”、“|”、“;”和“&”无法识别；如对“Windows”主机执行操作，需使用“win_command”模块。
        Parameters：
        *   chdir：默认为“null”，在执行指定的command之前切换进该目录中。
        *   creates：默认为“null”，指定一个文件名，如果其存在则不会运行此“command”。
        *   free_form：“Required”，“command”模块使用自由格式命令运行，没有实际参数。
        *   removes：默认为“null”，指定一个文件名，如其存在则运行此“command”。
            stdin：默认为“null”，将“command”的标准输入设置为指定的值。
            stdin_add_newline：默认为“True”，其值为“bool”值，设置为“yes”则向标准输入的数据附加换行符。
            strip_empty_ends：默认为“True”，其值为“bool”值，从结果的标准输出或标准错误输出剥去空白行。
            warn：默认为“True”，其值为“bool”值，启用或禁用task的警告。
        示例：
            # ansible node1 -m command -a "ls /tmp creates=/tmp/abc"

    shell：“shell”模块接受命令后以空格分隔的参数列表。与“command”模块基本一致，但会通过远程主机上的“shell（/bin/sh）”执行命令，如目标主机为“Windows”主机，请使用“win_shell”模块。
        Parameters：
        *   chdir：
        *   creates：
        *   executable：
        *   free_form：
        *   removes：
            stdin：
            stdin_add_newline：
            warn：
        示例：

    script

    raw

2、文件操作
    stat

    find

    file：设置文件属性、符号链接和目录属性，或删除文件、符号链接和目录。许多其他模块支持与“file”模块相同的选项，包括“copy”、“template”和“assemble”，如目标主机为“Windows”类型，可以使用“win_file”模块。
        Parameters：
            access_time：指定文件的“access_time”的时间，
            access_time_format：用于指定“access_time”参数的时间格式，默认为“%Y%m%d%H%M.%S”
            attributes：
            follow：bool值，其值为“yes”则表示创建一个文件系统的链接。
            force：bool值，用于在源文件不存在（但稍后会出现）或目标存在并且是一个文件的情况下强制创建符号链接。
            group：指定“path”所指的文件属组，如不指定则使用“ssh”的用户组作为该文件的属组。
            mode：指定“path”所指的文件的权限。
            modification_time
            modification_time_format
            owner：指定“path”所指文件的属主。
        *   path：指定被管理的文件，“path”的别名为“dest”或“name”。
            recurse：bool值，用于递归创建目录。
            selevel：定义“SELinux”文件的上下文级别。
            serole
            setype
            seuser
            src：指定源文件。
            state：其值为“directory”、“file”、“link”、“hard”、“touch”或“absent”。如指定为“directory”则表示当“path”指定的文件不存在时则自动创建一个目录。如指定为“file”则表示当“path”指定的文件不存在时自动创建一个普通文件。如指定为“link”会创建软链接，如指定为“hard”则创建硬链接，但“link”和“hard”一般与“follow”和“src”一并使用。如指定 为“absent”则会递归删除“path”所指定的文件或目录。如指定为“touch”则表示创建一个空文件。
            unsafe_writes

    lineinfile：修改文件内容
        Parameters：
            attributes
            backrefs：
            backup：bool值，修改文件前是否对原文件进行修改。
            create：bool值，当“path”所指定的参数不存在时是否自动创建。
            firstmatch：bool值，如“insertafter”、“insertbefore”和“regexp”所指定的正则表达式能匹配多行，如仅对第一个被匹配上的行前后进行操作。
            group
            insertafter：与“state=present”一并使用，指定将“line”所指定的内容插入到“insertafter”所指定的行后面。
            insertbefore：与“state=present”一并使用，默认对匹配上的多行中的最后一行之前插入，如需对匹配上的第一行之前插入则需指定“firstmatch=yes”。
            line：指定在文件中需增加/替换的内容。
            mode
            others
            owner
        *   path：必选参数，指定要操作的文件。
            regexp：使用正则表达式匹配对应的行，当替换文本时，如果有多行文本都能被匹配，则只有最后被匹配到的那行文本才会被替换，当删除文本时，如果有多行文本都能被匹配，那么这些行都会被删除。
            selevel
            serole
            setype
            seuser
            state：当需要删除对应文本时，需要将其置为“absent”，默认为“present”。
            unsafe_writes
            validate

    blockinfile

    template

    replace

    archive

    unarchive

3、包管理
    apt

    gem

    npm

    pip

    yum：使用“yum”包管理器“安装”，“升级”，“降级”，“删除”和列出包和组。但该模块仅适用于Python2，如需python3支持请参阅“dnf”模块。
        Parameters：
            allow_downgrade
            autoremove
            bugfix
            conf_file
            disable_excludes
            disable_gpg_check
            disable_plugin
            disablerepo
            download_only
            enable_plugin
            enablerepo
            exclude
            installroot
            list
            name
            releasever
            security
            skip_broken
            state：指定目标主机上的软件包的目标状态，值为“present”表示必须安装，值为“absent”表示卸载，值为“latest”表示升级软件到最新版。
            update_cache
            update_only
            use_backend
            validate_certs

    package

    easy_install

    rpm_key

4、文件传输
    fetch：从被控端主机抓取文件至本地，与COPY相反。
        Parameters：
        *   dest：指定保存文件的目标路径，如目标目录不存在会自动创建，如果目标目录为“/backup”，源文件为“host.example.com”主机上的“/etc/profile”，那么文件传输完成后将会保存为“/backup/host.example.com/etc/profile”。
        *   src：指定在远程主机上的文件，src所指定的不得为目录（如需将多个文件复制到本地建议事先将其归档或压缩为一个文件）。
            fail_on_missing：bool值，如果设置为“yes”则由任何原因导致的无法读取远程文件，则任务失败。
            flat：bool值，如设置为“yes”，则“dest”将会作为“src”的目标文件名，因此“dest”的路径不得存在。
            validate_checksum：bool值，获取文件后，验证源和目标文件是否相同。

    copy

    unarchive

    get_url

5、用户与组管理
    user

    group

6、mysql数据库
    mysql_db

    mysql_replication

    mysql_user

7、服务管理
    service

    systemd

    supervisorctl

8、检查
    uri

    wait_for

9、其他
    debug

    fail

    selinux

    set_fact

    sysctl

    authorized_key

    cron：管理crontab和环境变量。
        Parameters：
            backup：bool值，如设置，则会在修改crontab前进行备份。该模块在“backup_file”变量中返回备份的位置。
            cron_file：指定crontab的文件，如使用相对路径一般会存放在“/etc/cron.d”目录下，如果是绝对路径通常使用“/etc/crontab”，使用“cron_file”还需指定“user”。
            disabled：bool值，会在写入计或任务后将该任务进行注释。
            minute：指定每小时的第几分钟执行任务，支持的格式有“0-59”，“*”，“*/2”等。
            hour：指定每天的第几小时执行任务，支持的格式有“0-23”，“*”，“*/2”等。
            day：指定每月的几号执行任务，支持的格式有“1-31”，“*”，“*/2”等，默认为“*”即每天；
            month：指定在每年的第几个月执行任务，支持的格式有“1-12”，“*”，“*/2”等。
            weekday：指定在每周第几天执行任务，支持的格式有“0-6”，“Sunday-Saturday”，“*”等。
            env：bool值，仅用于指定“crontab”中的环境变量，例如job=“/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin” name=path env=yes。
            insertafter：与“state=present”和“env”一起使用，如指定则会在声明的环境变量之后插入环境变量。
            insertbefore：与“state=present”和“env”一起使用，如指定则会在声明的环境变量之前插入环境变量。
            job：指定要执行的任务，如果“env=yes”，则此入所指定的则是环境变量的值，如果“state=present”则该选项为必须指定。
            name：“crontab”的描述，如果设置了“env”则“name”即主为环境变量的名称。如果“state=absent”则“name”为必选选项，如果“state=present”且“name”没有指定，则会始终创建新的“crontab”，建议指定“name”。
            reboot：bool值，如果指定的“job”必须的重启时运行，则不推荐使用此选项，用户应该使用“special_time”。
            special_time：指定特殊时间，如“reboo”，“yearly”，“annually”，“monthly”，“weekly”，“daily”，“hourly”。
            state：指定任务的状态，其值仅有“present”或“absent”，默认为“present”。
            user：指定以哪个用户的身份在远程主机上执行任务。

    hostname：设置主机名。
        Parameters：
            name：用于定义要使用的主机名，会立即生效。